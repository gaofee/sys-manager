server.port=9001
#数据库连接
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=gaofei
spring.datasource.url=jdbc:mysql://localhost:3306/sys_permission?useSSL=false&useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

#springmvc 配置
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp

#freemark 的配置
#spring.freemarker.charset=UTF-8
#spring.freemarker.suffix=.ftl
#spring.freemarker.content-type=text/html; charset=utf-8
#spring.freemarker.template-loader-path=classpath:/templates
#spring.mvc.static-path-pattern=/static/**

#文件上传
#=============文件上传
#静态资源对外暴露的访问路径
file.staticAccessPath=/upload/**
#文件上传目录
file.uploadFolder=D:/upload/

##配置路径映射
web.upload-path=D:/**
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}
#文件大小设置
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=100MB

#分页插件
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true

#mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.gaofei.permission.domain
#mybatis-plus
mybatis-plus.mapper-locations=classpath:mappers/*.xml
mybatis-plus.type-aliases-package=com.gaofei.permission.domain
#打印sql
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#配置自定义starter的文件上传路径
file.domain=http://localhost:${server.port}/upload/
file.enable=true
file.path=D:/upload/

#redis
#spring.redis.host=192.168.21.138
#spring.redis.port=6379

#============== kafka ===================
# 指定kafka 代理地址，可以多个
#spring.kafka.bootstrap-servers=192.168.21.138:9092

#=============== provider  =======================

#spring.kafka.producer.retries=0
# 每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
#spring.kafka.consumer.group-id=test-consumer-group

#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#ElasticSearch 配置//名字必须和elasticsearch.yml里面的cluster.name相同
#spring.data.elasticsearch.cluster-name=my-application
#spring.data.elasticsearch.cluster-nodes=192.168.21.138:9300
#spring.data.elasticsearch.repositories.enabled=true


